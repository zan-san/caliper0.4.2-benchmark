configtxgen -profile OrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID app-channel -asOrg Org2MSP
configtxgen -profile OrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID app-channel -asOrg Org1MSP

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
# 或
docker-compose down
docker volume prune #这很重要

CHANNEL_NAME=app-channel docker-compose up -d

docker exec -it cli bash
# 创建通道
peer channel create -o orderer.aaa.com:7050 -c app-channel -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem
# 加入
peer channel join -b app-channel.block
# 锚节点指定
peer channel update -o orderer.aaa.com:7050 -c app-channel -f ./channel-artifacts/Org1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem

# 各节点都要加入通道
export CORE_PEER_LOCALMSPID="Org2MSP"
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.aaa.com/peers/peer0.org2.aaa.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.aaa.com/users/Admin@org2.aaa.com/msp
export CORE_PEER_ADDRESS=peer0.org2.aaa.com:7061

 # 加入
peer channel join -b app-channel.block
# 锚节点指定
peer channel update -o orderer.aaa.com:7050 -c app-channel -f ./channel-artifacts/Org2MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem


# 打包
cd /opt/gopath/src/github.com/chaincode/atcc
go env -w GOPROXY=https://goproxy.cn,direct
go mod init
go mod vendor
cd /opt/gopath/src/github.com/hyperledger/fabric/peer  # 工作目录

peer lifecycle chaincode package atcc.tar.gz --path ../../../chaincode/atcc --lang golang --label atcc_1
# 安装 
peer lifecycle chaincode install atcc.tar.gz
# 查询package id
peer lifecycle chaincode queryinstalled
#Package ID: atcc_1.0:e14f82badce9491f7aabf6c05e6105622604daf2e7521815f7108bf12674a61d, Label: atcc_1
# 批准链码
peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.aaa.com --channelID app-channel --name atcc --version 1.0 --package-id atcc_1.0:e14f82badce9491f7aabf6c05e6105622604daf2e7521815f7108bf12674a61d --sequence 1 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem

# 批准 注意添加package id，通道内各个节点都要批准
peer lifecycle chaincode approveformyorg --channelID mychannel --name atcc --version 1.0 --init-required --package-id  --sequence 1 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem

# 检查批准
peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name atcc --version 1.0 --init-required --sequence 1 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem --output json

# 提交 一次即可
peer lifecycle chaincode commit -o orderer.aaa.com:7050 --channelID mychannel --name atcc --version 1.0 --sequence 1 --init-required --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem --peerAddresses peer0.org1.aaa.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.aaa.com/peers/peer0.org1.aaa.com/tls/ca.crt --peerAddresses peer0.org2.aaa.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.aaa.com/peers/peer0.org2.aaa.com/tls/ca.crt

# 调用
peer chaincode invoke -o orderer.aaa.com:7050 --isInit  --ordererTLSHostnameOverride orderer.aaa.com --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/aaa.com/orderers/orderer.aaa.com/msp/tlscacerts/tlsca.aaa.com-cert.pem -C mychannel -n sacc --peerAddresses peer0.org1.aaa.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.aaa.com/peers/peer0.org1.aaa.com/tls/ca.crt --peerAddresses peer0.org2.aaa.com:9051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.aaa.com/peers/peer0.org2.aaa.com/tls/ca.crt -c '{"Args":[]}'
# 调用
peer chaincode query -C mychannel -n sacc -c '{"Args":["GetAllAssets"]}'
